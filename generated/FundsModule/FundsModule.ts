// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class FundsOperatorAdded extends EthereumEvent {
  get params(): FundsOperatorAdded__Params {
    return new FundsOperatorAdded__Params(this);
  }
}

export class FundsOperatorAdded__Params {
  _event: FundsOperatorAdded;

  constructor(event: FundsOperatorAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FundsOperatorRemoved extends EthereumEvent {
  get params(): FundsOperatorRemoved__Params {
    return new FundsOperatorRemoved__Params(this);
  }
}

export class FundsOperatorRemoved__Params {
  _event: FundsOperatorRemoved;

  constructor(event: FundsOperatorRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Status extends EthereumEvent {
  get params(): Status__Params {
    return new Status__Params(this);
  }
}

export class Status__Params {
  _event: Status;

  constructor(event: Status) {
    this._event = event;
  }

  get lBalance(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lDebt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get pEnterPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get pExitPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FundsModule__calculatePoolExitInverseResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class FundsModule extends SmartContract {
  static bind(address: Address): FundsModule {
    return new FundsModule("FundsModule", address);
  }

  MODULE_CURVE(): string {
    let result = super.call("MODULE_CURVE", []);

    return result[0].toString();
  }

  try_MODULE_CURVE(): CallResult<string> {
    let result = super.tryCall("MODULE_CURVE", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  MODULE_FUNDS(): string {
    let result = super.call("MODULE_FUNDS", []);

    return result[0].toString();
  }

  try_MODULE_FUNDS(): CallResult<string> {
    let result = super.tryCall("MODULE_FUNDS", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  MODULE_LIQUIDITY(): string {
    let result = super.call("MODULE_LIQUIDITY", []);

    return result[0].toString();
  }

  try_MODULE_LIQUIDITY(): CallResult<string> {
    let result = super.tryCall("MODULE_LIQUIDITY", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  MODULE_LOAN(): string {
    let result = super.call("MODULE_LOAN", []);

    return result[0].toString();
  }

  try_MODULE_LOAN(): CallResult<string> {
    let result = super.tryCall("MODULE_LOAN", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  getModuleAddress(module: string): Address {
    let result = super.call("getModuleAddress", [
      EthereumValue.fromString(module)
    ]);

    return result[0].toAddress();
  }

  try_getModuleAddress(module: string): CallResult<Address> {
    let result = super.tryCall("getModuleAddress", [
      EthereumValue.fromString(module)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  isFundsOperator(account: Address): boolean {
    let result = super.call("isFundsOperator", [
      EthereumValue.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isFundsOperator(account: Address): CallResult<boolean> {
    let result = super.tryCall("isFundsOperator", [
      EthereumValue.fromAddress(account)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", []);

    return result[0].toBoolean();
  }

  try_isOwner(): CallResult<boolean> {
    let result = super.tryCall("isOwner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  lToken(): Address {
    let result = super.call("lToken", []);

    return result[0].toAddress();
  }

  try_lToken(): CallResult<Address> {
    let result = super.tryCall("lToken", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  pToken(): Address {
    let result = super.call("pToken", []);

    return result[0].toAddress();
  }

  try_pToken(): CallResult<Address> {
    let result = super.tryCall("pToken", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  pool(): Address {
    let result = super.call("pool", []);

    return result[0].toAddress();
  }

  try_pool(): CallResult<Address> {
    let result = super.tryCall("pool", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  calculatePoolEnter(lAmount: BigInt): BigInt {
    let result = super.call("calculatePoolEnter", [
      EthereumValue.fromUnsignedBigInt(lAmount)
    ]);

    return result[0].toBigInt();
  }

  try_calculatePoolEnter(lAmount: BigInt): CallResult<BigInt> {
    let result = super.tryCall("calculatePoolEnter", [
      EthereumValue.fromUnsignedBigInt(lAmount)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  calculatePoolExit(lAmount: BigInt): BigInt {
    let result = super.call("calculatePoolExit", [
      EthereumValue.fromUnsignedBigInt(lAmount)
    ]);

    return result[0].toBigInt();
  }

  try_calculatePoolExit(lAmount: BigInt): CallResult<BigInt> {
    let result = super.tryCall("calculatePoolExit", [
      EthereumValue.fromUnsignedBigInt(lAmount)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  calculatePoolExitInverse(
    pAmount: BigInt
  ): FundsModule__calculatePoolExitInverseResult {
    let result = super.call("calculatePoolExitInverse", [
      EthereumValue.fromUnsignedBigInt(pAmount)
    ]);

    return new FundsModule__calculatePoolExitInverseResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_calculatePoolExitInverse(
    pAmount: BigInt
  ): CallResult<FundsModule__calculatePoolExitInverseResult> {
    let result = super.tryCall("calculatePoolExitInverse", [
      EthereumValue.fromUnsignedBigInt(pAmount)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new FundsModule__calculatePoolExitInverseResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }
}

export class AddFundsOperatorCall extends EthereumCall {
  get inputs(): AddFundsOperatorCall__Inputs {
    return new AddFundsOperatorCall__Inputs(this);
  }

  get outputs(): AddFundsOperatorCall__Outputs {
    return new AddFundsOperatorCall__Outputs(this);
  }
}

export class AddFundsOperatorCall__Inputs {
  _call: AddFundsOperatorCall;

  constructor(call: AddFundsOperatorCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddFundsOperatorCall__Outputs {
  _call: AddFundsOperatorCall;

  constructor(call: AddFundsOperatorCall) {
    this._call = call;
  }
}

export class RenounceFundsOperatorCall extends EthereumCall {
  get inputs(): RenounceFundsOperatorCall__Inputs {
    return new RenounceFundsOperatorCall__Inputs(this);
  }

  get outputs(): RenounceFundsOperatorCall__Outputs {
    return new RenounceFundsOperatorCall__Outputs(this);
  }
}

export class RenounceFundsOperatorCall__Inputs {
  _call: RenounceFundsOperatorCall;

  constructor(call: RenounceFundsOperatorCall) {
    this._call = call;
  }
}

export class RenounceFundsOperatorCall__Outputs {
  _call: RenounceFundsOperatorCall;

  constructor(call: RenounceFundsOperatorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetPoolCall extends EthereumCall {
  get inputs(): SetPoolCall__Inputs {
    return new SetPoolCall__Inputs(this);
  }

  get outputs(): SetPoolCall__Outputs {
    return new SetPoolCall__Outputs(this);
  }
}

export class SetPoolCall__Inputs {
  _call: SetPoolCall;

  constructor(call: SetPoolCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPoolCall__Outputs {
  _call: SetPoolCall;

  constructor(call: SetPoolCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class InitializeCall extends EthereumCall {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class Initialize1Call extends EthereumCall {
  get inputs(): Initialize1Call__Inputs {
    return new Initialize1Call__Inputs(this);
  }

  get outputs(): Initialize1Call__Outputs {
    return new Initialize1Call__Outputs(this);
  }
}

export class Initialize1Call__Inputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Initialize1Call__Outputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }
}

export class Initialize2Call extends EthereumCall {
  get inputs(): Initialize2Call__Inputs {
    return new Initialize2Call__Inputs(this);
  }

  get outputs(): Initialize2Call__Outputs {
    return new Initialize2Call__Outputs(this);
  }
}

export class Initialize2Call__Inputs {
  _call: Initialize2Call;

  constructor(call: Initialize2Call) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Initialize2Call__Outputs {
  _call: Initialize2Call;

  constructor(call: Initialize2Call) {
    this._call = call;
  }
}

export class DepositLTokensCall extends EthereumCall {
  get inputs(): DepositLTokensCall__Inputs {
    return new DepositLTokensCall__Inputs(this);
  }

  get outputs(): DepositLTokensCall__Outputs {
    return new DepositLTokensCall__Outputs(this);
  }
}

export class DepositLTokensCall__Inputs {
  _call: DepositLTokensCall;

  constructor(call: DepositLTokensCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositLTokensCall__Outputs {
  _call: DepositLTokensCall;

  constructor(call: DepositLTokensCall) {
    this._call = call;
  }
}

export class WithdrawLTokensCall extends EthereumCall {
  get inputs(): WithdrawLTokensCall__Inputs {
    return new WithdrawLTokensCall__Inputs(this);
  }

  get outputs(): WithdrawLTokensCall__Outputs {
    return new WithdrawLTokensCall__Outputs(this);
  }
}

export class WithdrawLTokensCall__Inputs {
  _call: WithdrawLTokensCall;

  constructor(call: WithdrawLTokensCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawLTokensCall__Outputs {
  _call: WithdrawLTokensCall;

  constructor(call: WithdrawLTokensCall) {
    this._call = call;
  }
}

export class WithdrawLTokens1Call extends EthereumCall {
  get inputs(): WithdrawLTokens1Call__Inputs {
    return new WithdrawLTokens1Call__Inputs(this);
  }

  get outputs(): WithdrawLTokens1Call__Outputs {
    return new WithdrawLTokens1Call__Outputs(this);
  }
}

export class WithdrawLTokens1Call__Inputs {
  _call: WithdrawLTokens1Call;

  constructor(call: WithdrawLTokens1Call) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get poolFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawLTokens1Call__Outputs {
  _call: WithdrawLTokens1Call;

  constructor(call: WithdrawLTokens1Call) {
    this._call = call;
  }
}

export class DepositPTokensCall extends EthereumCall {
  get inputs(): DepositPTokensCall__Inputs {
    return new DepositPTokensCall__Inputs(this);
  }

  get outputs(): DepositPTokensCall__Outputs {
    return new DepositPTokensCall__Outputs(this);
  }
}

export class DepositPTokensCall__Inputs {
  _call: DepositPTokensCall;

  constructor(call: DepositPTokensCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositPTokensCall__Outputs {
  _call: DepositPTokensCall;

  constructor(call: DepositPTokensCall) {
    this._call = call;
  }
}

export class WithdrawPTokensCall extends EthereumCall {
  get inputs(): WithdrawPTokensCall__Inputs {
    return new WithdrawPTokensCall__Inputs(this);
  }

  get outputs(): WithdrawPTokensCall__Outputs {
    return new WithdrawPTokensCall__Outputs(this);
  }
}

export class WithdrawPTokensCall__Inputs {
  _call: WithdrawPTokensCall;

  constructor(call: WithdrawPTokensCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawPTokensCall__Outputs {
  _call: WithdrawPTokensCall;

  constructor(call: WithdrawPTokensCall) {
    this._call = call;
  }
}

export class MintPTokensCall extends EthereumCall {
  get inputs(): MintPTokensCall__Inputs {
    return new MintPTokensCall__Inputs(this);
  }

  get outputs(): MintPTokensCall__Outputs {
    return new MintPTokensCall__Outputs(this);
  }
}

export class MintPTokensCall__Inputs {
  _call: MintPTokensCall;

  constructor(call: MintPTokensCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintPTokensCall__Outputs {
  _call: MintPTokensCall;

  constructor(call: MintPTokensCall) {
    this._call = call;
  }
}

export class BurnPTokensCall extends EthereumCall {
  get inputs(): BurnPTokensCall__Inputs {
    return new BurnPTokensCall__Inputs(this);
  }

  get outputs(): BurnPTokensCall__Outputs {
    return new BurnPTokensCall__Outputs(this);
  }
}

export class BurnPTokensCall__Inputs {
  _call: BurnPTokensCall;

  constructor(call: BurnPTokensCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnPTokensCall__Outputs {
  _call: BurnPTokensCall;

  constructor(call: BurnPTokensCall) {
    this._call = call;
  }
}
