{
  "contractName": "PToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destoys `amount` tokens from the caller.     * See `ERC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ERC20._burnFrom`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{},\"notice\":\"Implementation of Akropolis Pool Token\"}},\"settings\":{\"compilationTarget\":{\"/home/aleksrow/Documents/bch/akropolisOS/contracts/token/pTokens/PToken.sol\":\"PToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/aleksrow/Documents/bch/akropolisOS/contracts/common/Base.sol\":{\"keccak256\":\"0x1906ce5a0c3bf69c232fee9a69eada2a47fb8950854372519e667c5cbd8fc7f7\",\"urls\":[\"bzz-raw://be4cb46a4eeed756167c8f96c4f3a3c8b06b7b2636aa5c88177b8032703dd1ee\",\"dweb:/ipfs/QmYvRbGVVghEvFczijWmZTnQpmkefQCoQEVorzmstKfpra\"]},\"/home/aleksrow/Documents/bch/akropolisOS/contracts/token/pTokens/PToken.sol\":{\"keccak256\":\"0x8c41ee4b3e640a1e6f5d0492c0024df83686f21903c138930edfb5f14c26c420\",\"urls\":[\"bzz-raw://37bf0d1340ec6a8fefb5ac6b359c31f4653f15c3b70ed407161e4fd008118099\",\"dweb:/ipfs/QmWTzVjbcBHtRwmQgiT44nCvpWrd3MoZPwXoX3CBPuHbHD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzz-raw://c89dee1b8e96cb83f529b8b5c93be6b420c1913363a3fed01241942f08cc968f\",\"dweb:/ipfs/QmfWWwzg9hah3YwZRFWvAwq91HLjCHkKnxXqP6uLGURUou\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xec9f5e2dd33c13f1c1a63b22257724b61d2af536a2d22b2343144e1044b005fe\",\"urls\":[\"bzz-raw://ed49a07c7fa5f07a2e5fff28f07933bf56f8fd932be3c90e797e4d5c4689f94f\",\"dweb:/ipfs/QmdNEMKyATnnccVv8kip5eZFyuY77PU9SrBYVptioZC6pV\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa8d5fc6a480f6de5320c06f397e810198bf4a6c8b0b2405a4b28fb3909c3771e\",\"urls\":[\"bzz-raw://1c01ff2789027e0a9cbaaeabbc239d59906b40776e2936fcbdbc92dab7a4f912\",\"dweb:/ipfs/QmPYwzjB1GcQndyFqUNkpHNXs1CqxBqE3diVDWuWs5UaDb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x836e5248258c1eeef170a2b394d74cdec21adfbfca71a8feac303339182c4a39\",\"urls\":[\"bzz-raw://5a429cd7eac29f48bcbb6981f34ba43232e0fcb2bf9e752d2aaa2a64a27e07d5\",\"dweb:/ipfs/QmaFoHVPCY9Z5iZjZuwxq6pJ8cEqZdy7foLNNp46BzFNju\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xcae60acc572a549182cd7b26a169dbe5154ad0602cfb6c37533e9ee4ec1b4b06\",\"urls\":[\"bzz-raw://8d2bcd2a72821122b854e9467276090df516c50b34860d170164f4f080d1e579\",\"dweb:/ipfs/QmbxUTBMdADhXPAfzaPXFbAHEhYZyugdHwedNh43W1BUmt\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x608060405261193e806100136000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638129fc1c116100c3578063a457c2d71161007c578063a457c2d7146104f5578063a9059cbb14610521578063aa271e1a1461054d578063c4d66de814610573578063dd62ed3e14610599578063f2fde38b146105c757610158565b80638129fc1c1461048b5780638da5cb5b146104935780638f32d59b146104b757806395d89b41146104bf578063983b2d56146104c757806398650275146104ed57610158565b8063395093511161011557806339509351146103bc57806340c10f19146103e857806342966c681461041457806370a0823114610431578063715018a61461045757806379cc67901461045f57610158565b806306fdde031461015d578063095ea7b3146101da5780631624f6c61461021a57806318160ddd1461034e57806323b872dd14610368578063313ce5671461039e575b600080fd5b6101656105ed565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019f578181015183820152602001610187565b50505050905090810190601f1680156101cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610206600480360360408110156101f057600080fd5b506001600160a01b038135169060200135610684565b604080519115158252519081900360200190f35b61034c6004803603606081101561023057600080fd5b81019060208101813564010000000081111561024b57600080fd5b82018360208201111561025d57600080fd5b8035906020019184600183028401116401000000008311171561027f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102d257600080fd5b8201836020820111156102e457600080fd5b8035906020019184600183028401116401000000008311171561030657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106a19050565b005b61035661077d565b60408051918252519081900360200190f35b6102066004803603606081101561037e57600080fd5b506001600160a01b03813581169160208101359091169060400135610783565b6103a66107f8565b6040805160ff9092168252519081900360200190f35b610206600480360360408110156103d257600080fd5b506001600160a01b038135169060200135610801565b610206600480360360408110156103fe57600080fd5b506001600160a01b038135169060200135610855565b61034c6004803603602081101561042a57600080fd5b50356108ac565b6103566004803603602081101561044757600080fd5b50356001600160a01b03166108c0565b61034c6108db565b61034c6004803603604081101561047557600080fd5b506001600160a01b03813516906020013561097e565b61034c61098c565b61049b610a98565b604080516001600160a01b039092168252519081900360200190f35b610206610aa7565b610165610acd565b61034c600480360360208110156104dd57600080fd5b50356001600160a01b0316610b2e565b61034c610b7d565b6102066004803603604081101561050b57600080fd5b506001600160a01b038135169060200135610b8f565b6102066004803603604081101561053757600080fd5b506001600160a01b038135169060200135610be3565b6102066004803603602081101561056357600080fd5b50356001600160a01b0316610bf7565b61034c6004803603602081101561058957600080fd5b50356001600160a01b0316610c10565b610356600480360360408110156105af57600080fd5b506001600160a01b0381358116916020013516610cbb565b61034c600480360360208110156105dd57600080fd5b50356001600160a01b0316610ce6565b60668054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b505050505090505b90565b6000610698610691610d48565b8484610d4c565b50600192915050565b600054610100900460ff16806106ba57506106ba610e38565b806106c8575060005460ff16155b6107035760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff1615801561072e576000805460ff1961ff0019909116610100171660011790555b83516107419060669060208701906116fb565b5082516107559060679060208601906116fb565b506068805460ff191660ff84161790558015610777576000805461ff00191690555b50505050565b609d5490565b6000610790848484610e3e565b6107ee8461079c610d48565b6001600160a01b0387166000908152609c602052604081206107e9918791906107c3610d48565b6001600160a01b031681526020810191909152604001600020549063ffffffff610f8216565b610d4c565b5060019392505050565b60685460ff1690565b600061069861080e610d48565b846107e985609c600061081f610d48565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610fdf16565b6000610867610862610d48565b610bf7565b6108a25760405162461bcd60e51b81526004018080602001828103825260308152602001806117ff6030913960400191505060405180910390fd5b6106988383611040565b6108bd6108b7610d48565b82611132565b50565b6001600160a01b03166000908152609b602052604090205490565b6108e3610aa7565b610934576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b610988828261120d565b5050565b600054610100900460ff16806109a557506109a5610e38565b806109b3575060005460ff16155b6109ee5760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff16158015610a19576000805460ff1961ff0019909116610100171660011790555b610a2161124a565b610a746040518060400160405280601481526020017320b5b937b837b634b9902837b7b6102a37b5b2b760611b8152506040518060400160405280600381526020016250544b60e81b81525060126106a1565b610a84610a7f610d48565b610c10565b80156108bd576000805461ff001916905550565b6033546001600160a01b031690565b6033546000906001600160a01b0316610abe610d48565b6001600160a01b031614905090565b60678054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b610b39610862610d48565b610b745760405162461bcd60e51b81526004018080602001828103825260308152602001806117ff6030913960400191505060405180910390fd5b6108bd816112e7565b610b8d610b88610d48565b61132f565b565b6000610698610b9c610d48565b846107e985609c6000610bad610d48565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610f8216565b6000610698610bf0610d48565b8484610e3e565b6000610c0a60d08363ffffffff61137716565b92915050565b600054610100900460ff1680610c295750610c29610e38565b80610c37575060005460ff16155b610c725760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff16158015610c9d576000805460ff1961ff0019909116610100171660011790555b610ca6826113de565b8015610988576000805461ff00191690555050565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205490565b610cee610aa7565b610d3f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6108bd81611481565b3390565b6001600160a01b038316610d915760405162461bcd60e51b81526004018080602001828103825260248152602001806118e66024913960400191505060405180910390fd5b6001600160a01b038216610dd65760405162461bcd60e51b81526004018080602001828103825260228152602001806117dd6022913960400191505060405180910390fd5b6001600160a01b038084166000818152609c6020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b038316610e835760405162461bcd60e51b81526004018080602001828103825260258152602001806118c16025913960400191505060405180910390fd5b6001600160a01b038216610ec85760405162461bcd60e51b81526004018080602001828103825260238152602001806117946023913960400191505060405180910390fd5b6001600160a01b0383166000908152609b6020526040902054610ef1908263ffffffff610f8216565b6001600160a01b038085166000908152609b60205260408082209390935590841681522054610f26908263ffffffff610fdf16565b6001600160a01b038084166000818152609b602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610fd9576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015611039576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661109b576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b609d546110ae908263ffffffff610fdf16565b609d556001600160a01b0382166000908152609b60205260409020546110da908263ffffffff610fdf16565b6001600160a01b0383166000818152609b602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166111775760405162461bcd60e51b81526004018080602001828103825260218152602001806118a06021913960400191505060405180910390fd5b609d5461118a908263ffffffff610f8216565b609d556001600160a01b0382166000908152609b60205260409020546111b6908263ffffffff610f8216565b6001600160a01b0383166000818152609b60209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6112178282611132565b61098882611223610d48565b6001600160a01b0385166000908152609c602052604081206107e9918691906107c3610d48565b600054610100900460ff16806112635750611263610e38565b80611271575060005460ff16155b6112ac5760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff161580156112d7576000805460ff1961ff0019909116610100171660011790555b610a846112e2610d48565b611522565b6112f860d08263ffffffff61161316565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61134060d08263ffffffff61169416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166113be5760405162461bcd60e51b81526004018080602001828103825260228152602001806118506022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600054610100900460ff16806113f757506113f7610e38565b80611405575060005460ff16155b6114405760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff1615801561146b576000805460ff1961ff0019909116610100171660011790555b61147482610bf7565b610ca657610ca6826112e7565b6001600160a01b0381166114c65760405162461bcd60e51b81526004018080602001828103825260268152602001806117b76026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff168061153b575061153b610e38565b80611549575060005460ff16155b6115845760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff161580156115af576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610988576000805461ff00191690555050565b61161d8282611377565b1561166f576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61169e8282611377565b6116d95760405162461bcd60e51b815260040180806020018281038252602181526020018061182f6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061173c57805160ff1916838001178555611769565b82800160010185558215611769579182015b8281111561176957825182559160200191906001019061174e565b50611775929150611779565b5090565b61068191905b80821115611775576000815560010161177f56fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158203d727cc7918fa9419544c2c85d9f5fdc8e66d107b42047c0d91d23914871ee7464736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80638129fc1c116100c3578063a457c2d71161007c578063a457c2d7146104f5578063a9059cbb14610521578063aa271e1a1461054d578063c4d66de814610573578063dd62ed3e14610599578063f2fde38b146105c757610158565b80638129fc1c1461048b5780638da5cb5b146104935780638f32d59b146104b757806395d89b41146104bf578063983b2d56146104c757806398650275146104ed57610158565b8063395093511161011557806339509351146103bc57806340c10f19146103e857806342966c681461041457806370a0823114610431578063715018a61461045757806379cc67901461045f57610158565b806306fdde031461015d578063095ea7b3146101da5780631624f6c61461021a57806318160ddd1461034e57806323b872dd14610368578063313ce5671461039e575b600080fd5b6101656105ed565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019f578181015183820152602001610187565b50505050905090810190601f1680156101cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610206600480360360408110156101f057600080fd5b506001600160a01b038135169060200135610684565b604080519115158252519081900360200190f35b61034c6004803603606081101561023057600080fd5b81019060208101813564010000000081111561024b57600080fd5b82018360208201111561025d57600080fd5b8035906020019184600183028401116401000000008311171561027f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102d257600080fd5b8201836020820111156102e457600080fd5b8035906020019184600183028401116401000000008311171561030657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106a19050565b005b61035661077d565b60408051918252519081900360200190f35b6102066004803603606081101561037e57600080fd5b506001600160a01b03813581169160208101359091169060400135610783565b6103a66107f8565b6040805160ff9092168252519081900360200190f35b610206600480360360408110156103d257600080fd5b506001600160a01b038135169060200135610801565b610206600480360360408110156103fe57600080fd5b506001600160a01b038135169060200135610855565b61034c6004803603602081101561042a57600080fd5b50356108ac565b6103566004803603602081101561044757600080fd5b50356001600160a01b03166108c0565b61034c6108db565b61034c6004803603604081101561047557600080fd5b506001600160a01b03813516906020013561097e565b61034c61098c565b61049b610a98565b604080516001600160a01b039092168252519081900360200190f35b610206610aa7565b610165610acd565b61034c600480360360208110156104dd57600080fd5b50356001600160a01b0316610b2e565b61034c610b7d565b6102066004803603604081101561050b57600080fd5b506001600160a01b038135169060200135610b8f565b6102066004803603604081101561053757600080fd5b506001600160a01b038135169060200135610be3565b6102066004803603602081101561056357600080fd5b50356001600160a01b0316610bf7565b61034c6004803603602081101561058957600080fd5b50356001600160a01b0316610c10565b610356600480360360408110156105af57600080fd5b506001600160a01b0381358116916020013516610cbb565b61034c600480360360208110156105dd57600080fd5b50356001600160a01b0316610ce6565b60668054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b505050505090505b90565b6000610698610691610d48565b8484610d4c565b50600192915050565b600054610100900460ff16806106ba57506106ba610e38565b806106c8575060005460ff16155b6107035760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff1615801561072e576000805460ff1961ff0019909116610100171660011790555b83516107419060669060208701906116fb565b5082516107559060679060208601906116fb565b506068805460ff191660ff84161790558015610777576000805461ff00191690555b50505050565b609d5490565b6000610790848484610e3e565b6107ee8461079c610d48565b6001600160a01b0387166000908152609c602052604081206107e9918791906107c3610d48565b6001600160a01b031681526020810191909152604001600020549063ffffffff610f8216565b610d4c565b5060019392505050565b60685460ff1690565b600061069861080e610d48565b846107e985609c600061081f610d48565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610fdf16565b6000610867610862610d48565b610bf7565b6108a25760405162461bcd60e51b81526004018080602001828103825260308152602001806117ff6030913960400191505060405180910390fd5b6106988383611040565b6108bd6108b7610d48565b82611132565b50565b6001600160a01b03166000908152609b602052604090205490565b6108e3610aa7565b610934576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b610988828261120d565b5050565b600054610100900460ff16806109a557506109a5610e38565b806109b3575060005460ff16155b6109ee5760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff16158015610a19576000805460ff1961ff0019909116610100171660011790555b610a2161124a565b610a746040518060400160405280601481526020017320b5b937b837b634b9902837b7b6102a37b5b2b760611b8152506040518060400160405280600381526020016250544b60e81b81525060126106a1565b610a84610a7f610d48565b610c10565b80156108bd576000805461ff001916905550565b6033546001600160a01b031690565b6033546000906001600160a01b0316610abe610d48565b6001600160a01b031614905090565b60678054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b610b39610862610d48565b610b745760405162461bcd60e51b81526004018080602001828103825260308152602001806117ff6030913960400191505060405180910390fd5b6108bd816112e7565b610b8d610b88610d48565b61132f565b565b6000610698610b9c610d48565b846107e985609c6000610bad610d48565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610f8216565b6000610698610bf0610d48565b8484610e3e565b6000610c0a60d08363ffffffff61137716565b92915050565b600054610100900460ff1680610c295750610c29610e38565b80610c37575060005460ff16155b610c725760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff16158015610c9d576000805460ff1961ff0019909116610100171660011790555b610ca6826113de565b8015610988576000805461ff00191690555050565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205490565b610cee610aa7565b610d3f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6108bd81611481565b3390565b6001600160a01b038316610d915760405162461bcd60e51b81526004018080602001828103825260248152602001806118e66024913960400191505060405180910390fd5b6001600160a01b038216610dd65760405162461bcd60e51b81526004018080602001828103825260228152602001806117dd6022913960400191505060405180910390fd5b6001600160a01b038084166000818152609c6020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b038316610e835760405162461bcd60e51b81526004018080602001828103825260258152602001806118c16025913960400191505060405180910390fd5b6001600160a01b038216610ec85760405162461bcd60e51b81526004018080602001828103825260238152602001806117946023913960400191505060405180910390fd5b6001600160a01b0383166000908152609b6020526040902054610ef1908263ffffffff610f8216565b6001600160a01b038085166000908152609b60205260408082209390935590841681522054610f26908263ffffffff610fdf16565b6001600160a01b038084166000818152609b602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610fd9576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015611039576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661109b576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b609d546110ae908263ffffffff610fdf16565b609d556001600160a01b0382166000908152609b60205260409020546110da908263ffffffff610fdf16565b6001600160a01b0383166000818152609b602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166111775760405162461bcd60e51b81526004018080602001828103825260218152602001806118a06021913960400191505060405180910390fd5b609d5461118a908263ffffffff610f8216565b609d556001600160a01b0382166000908152609b60205260409020546111b6908263ffffffff610f8216565b6001600160a01b0383166000818152609b60209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6112178282611132565b61098882611223610d48565b6001600160a01b0385166000908152609c602052604081206107e9918691906107c3610d48565b600054610100900460ff16806112635750611263610e38565b80611271575060005460ff16155b6112ac5760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff161580156112d7576000805460ff1961ff0019909116610100171660011790555b610a846112e2610d48565b611522565b6112f860d08263ffffffff61161316565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61134060d08263ffffffff61169416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166113be5760405162461bcd60e51b81526004018080602001828103825260228152602001806118506022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600054610100900460ff16806113f757506113f7610e38565b80611405575060005460ff16155b6114405760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff1615801561146b576000805460ff1961ff0019909116610100171660011790555b61147482610bf7565b610ca657610ca6826112e7565b6001600160a01b0381166114c65760405162461bcd60e51b81526004018080602001828103825260268152602001806117b76026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff168061153b575061153b610e38565b80611549575060005460ff16155b6115845760405162461bcd60e51b815260040180806020018281038252602e815260200180611872602e913960400191505060405180910390fd5b600054610100900460ff161580156115af576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610988576000805461ff00191690555050565b61161d8282611377565b1561166f576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61169e8282611377565b6116d95760405162461bcd60e51b815260040180806020018281038252602181526020018061182f6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061173c57805160ff1916838001178555611769565b82800160010185558215611769579182015b8281111561176957825182559160200191906001019061174e565b50611775929150611779565b5090565b61068191905b80821115611775576000815560010161177f56fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158203d727cc7918fa9419544c2c85d9f5fdc8e66d107b42047c0d91d23914871ee7464736f6c634300050c0032",
  "sourceMap": "390:271:26:-;;;;;;;;;",
  "deployedSourceMap": "390:271:26:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;390:271:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2557:147:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2557:147:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;492:182:37;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:37;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:37;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:37;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:37;;;;;;;;-1:-1:-1;492:182:37;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:37;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:37;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:37;;-1:-1:-1;;;492:182:37;;;;;-1:-1:-1;492:182:37;;-1:-1:-1;492:182:37:i;:::-;;1632:89:35;;;:::i;:::-;;;;;;;;;;;;;;;;3161:231;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3161:231:35;;;;;;;;;;;;;;;;;:::i;1573:81:37:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3787:207:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3787:207:35;;;;;;;;:::i;685:140:38:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;685:140:38;;;;;;;;:::i;515:81:36:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;515:81:36;;:::i;1779:108:35:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1779:108:35;-1:-1:-1;;;;;1779:108:35;;:::i;1746:137:34:-;;;:::i;653:101:36:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;653:101:36;;;;;;;;:::i;466:192:26:-;;;:::i;959:77:34:-;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:34;;;;;;;;;;;;;;1310:92;;;:::i;933:85:37:-;;;:::i;756:90:32:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:32;-1:-1:-1;;;;;756:90:32;;:::i;852:77::-;;;:::i;4481:217:35:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4481:217:35;;;;;;;;:::i;2090:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2090:139:35;;;;;;;;:::i;643:107:32:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:32;-1:-1:-1;;;;;643:107:32;;:::i;448:101:38:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;448:101:38;-1:-1:-1;;;;;448:101:38;;:::i;2287:132:35:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2287:132:35;;;;;;;;;;:::i;2032:107:34:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:34;-1:-1:-1;;;;;2032:107:34;;:::i;739:81:37:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2557:147:35:-;2622:4;2638:38;2647:12;:10;:12::i;:::-;2661:7;2670:5;2638:8;:38::i;:::-;-1:-1:-1;2693:4:35;2557:147;;;;:::o;492:182:37:-;1024:12:40;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:40;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:40;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:37;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:37;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:37;:20;;-1:-1:-1;;647:20:37;;;;;;;1264:55:40;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:40;;;1264:55;492:182:37;;;;:::o;1632:89:35:-;1702:12;;1632:89;:::o;3161:231::-;3240:4;3256:26;3266:4;3272:2;3276:5;3256:9;:26::i;:::-;3292:72;3301:4;3307:12;:10;:12::i;:::-;-1:-1:-1;;;;;3321:17:35;;;;;;:11;:17;;;;;:42;;3357:5;;3321:17;3339:12;:10;:12::i;:::-;-1:-1:-1;;;;;3321:31:35;;;;;;;;;;;;-1:-1:-1;3321:31:35;;;:42;:35;:42;:::i;:::-;3292:8;:72::i;:::-;-1:-1:-1;3381:4:35;3161:231;;;;;:::o;1573:81:37:-;1638:9;;;;1573:81;:::o;3787:207:35:-;3867:4;3883:83;3892:12;:10;:12::i;:::-;3906:7;3915:50;3954:10;3915:11;:25;3927:12;:10;:12::i;:::-;-1:-1:-1;;;;;3915:25:35;;;;;;;;;;;;;;;;;-1:-1:-1;3915:25:35;;;:34;;;;;;;;;;;:50;:38;:50;:::i;685:140:38:-;759:4;544:22:32;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;536:83:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:22:38;781:7;790:6;775:5;:22::i;515:81:36:-;562:27;568:12;:10;:12::i;:::-;582:6;562:5;:27::i;:::-;515:81;:::o;1779:108:35:-;-1:-1:-1;;;;;1862:18:35;1836:7;1862:18;;;:9;:18;;;;;;;1779:108::o;1746:137:34:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:34;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:34;;;1746:137::o;653:101:36:-;721:26;731:7;740:6;721:9;:26::i;:::-;653:101;;:::o;466:192:26:-;1024:12:40;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:40;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:40;;;;;1225:18;1213:4;1225:18;;;1170:80;517:17:26;:15;:17::i;:::-;544:59;;;;;;;;;;;;;;-1:-1:-1;;;544:59:26;;;;;;;;;;;;;;;;-1:-1:-1;;;544:59:26;;;600:2;544:24;:59::i;:::-;613:38;638:12;:10;:12::i;:::-;613:24;:38::i;:::-;1268:14:40;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:40;;;466:192:26;:::o;959:77:34:-;1023:6;;-1:-1:-1;;;;;1023:6:34;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:34;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:34;;1366:29;;1310:92;:::o;933:85:37:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:32;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;4481:217:35:-;4566:4;4582:88;4591:12;:10;:12::i;:::-;4605:7;4614:55;4653:15;4614:11;:25;4626:12;:10;:12::i;:::-;-1:-1:-1;;;;;4614:25:35;;;;;;;;;;;;;;;;;-1:-1:-1;4614:25:35;;;:34;;;;;;;;;;;:55;:38;:55;:::i;2090:139::-;2151:4;2167:34;2177:12;:10;:12::i;:::-;2191:2;2195:5;2167:9;:34::i;643:107:32:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:32:o;448:101:38:-;1024:12:40;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:40;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:40;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:38;535:6;513:21;:29::i;:::-;1268:14:40;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:40;;;448:101:38;;:::o;2287:132:35:-;-1:-1:-1;;;;;2385:18:35;;;2359:7;2385:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2287:132::o;2032:107:34:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;791:88:30:-;862:10;791:88;:::o;7210:329:35:-;-1:-1:-1;;;;;7302:19:35;;7294:68;;;;-1:-1:-1;;;7294:68:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7380:21:35;;7372:68;;;;-1:-1:-1;;;7372:68:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7451:18:35;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7501:31;;;;;;;;;;;;;;;;;7210:329;;;:::o;1409:467:40:-;1842:7;1830:20;1864:7;1409:467;:::o;5172:422:35:-;-1:-1:-1;;;;;5269:20:35;;5261:70;;;;-1:-1:-1;;;5261:70:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5349:23:35;;5341:71;;;;-1:-1:-1;;;5341:71:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5443:17:35;;;;;;:9;:17;;;;;;:29;;5465:6;5443:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5423:17:35;;;;;;;:9;:17;;;;;;:49;;;;5505:20;;;;;;;:32;;5530:6;5505:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5482:20:35;;;;;;;:9;:20;;;;;;;;;:55;;;;5552:35;;;;;;;5482:20;;5552:35;;;;;;;;;;;;;5172:422;;;:::o;1274:179:33:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:33;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:33:o;5864:302:35:-;-1:-1:-1;;;;;5939:21:35;;5931:65;;;;;-1:-1:-1;;;5931:65:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;6022:12;;:24;;6039:6;6022:24;:16;:24;:::i;:::-;6007:12;:39;-1:-1:-1;;;;;6077:18:35;;;;;;:9;:18;;;;;;:30;;6100:6;6077:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6056:18:35;;;;;;:9;:18;;;;;;;;:51;;;;6122:37;;;;;;;6056:18;;;;6122:37;;;;;;;;;;5864:302;;:::o;6485:300::-;-1:-1:-1;;;;;6559:21:35;;6551:67;;;;-1:-1:-1;;;6551:67:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6644:12;;:23;;6661:5;6644:23;:16;:23;:::i;:::-;6629:12;:38;-1:-1:-1;;;;;6698:18:35;;;;;;:9;:18;;;;;;:29;;6721:5;6698:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6677:18:35;;;;;;:9;:18;;;;;;;;:50;;;;6742:36;;;;;;;6677:18;;6742:36;;;;;;;;;;;6485:300;;:::o;7716:189::-;7787:22;7793:7;7802:6;7787:5;:22::i;:::-;7819:79;7828:7;7837:12;:10;:12::i;:::-;-1:-1:-1;;;;;7851:20:35;;;;;;:11;:20;;;;;:46;;7890:6;;7851:20;7872:12;:10;:12::i;395:90:0:-;1024:12:40;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:40;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:40;;;;;1225:18;1213:4;1225:18;;;1170:80;446:32:0;465:12;:10;:12::i;:::-;446:18;:32::i;935:119:32:-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:32;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:32;;;;;;;;1060:127;:::o;779:200:31:-;851:4;-1:-1:-1;;;;;875:21:31;;867:68;;;;-1:-1:-1;;;867:68:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:31;:11;:20;;;;;;;;;;;;;;;779:200::o;361:137:32:-;1024:12:40;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:40;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:40;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:32;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;2240:225:34:-;-1:-1:-1;;;;;2313:22:34;;2305:73;;;;-1:-1:-1;;;2305:73:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:34;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:34;-1:-1:-1;;;;;2441:17:34;;;;;;;;;;2240:225::o;741:142::-;1024:12:40;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:40;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:40;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:34;:15;;-1:-1:-1;;;;;;806:15:34;-1:-1:-1;;;;;806:15:34;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:34;;-1:-1:-1;;836:40:34;1268:14:40;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:40;;;741:142:34;;:::o;260:175:31:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:31;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:31;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:31;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:31;;;510:180::o;390:271:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:271:26;;;-1:-1:-1;390:271:26;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.12;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"../../common/Base.sol\";\n\n/**\n * @notice Implementation of Akropolis Pool Token\n */\ncontract PToken is Base, ERC20Detailed, ERC20Mintable, ERC20Burnable {\n\n    function initialize() public initializer {\n        Base.initialize();\n        ERC20Detailed.initialize(\"Akropolis Pool Token\", \"PTK\", 18);\n        ERC20Mintable.initialize(_msgSender());\n    }\n\n}\n\n",
  "sourcePath": "/home/aleksrow/Documents/bch/akropolisOS/contracts/token/pTokens/PToken.sol",
  "ast": {
    "absolutePath": "/home/aleksrow/Documents/bch/akropolisOS/contracts/token/pTokens/PToken.sol",
    "exportedSymbols": {
      "PToken": [
        3819
      ]
    },
    "id": 3820,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3780,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 3781,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5711,
        "src": "26:90:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 3782,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5760,
        "src": "117:90:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 3783,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5644,
        "src": "208:90:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksrow/Documents/bch/akropolisOS/contracts/common/Base.sol",
        "file": "../../common/Base.sol",
        "id": 3784,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 30,
        "src": "299:31:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3785,
              "name": "Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 29,
              "src": "409:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Base_$29",
                "typeString": "contract Base"
              }
            },
            "id": 3786,
            "nodeType": "InheritanceSpecifier",
            "src": "409:4:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3787,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5710,
              "src": "415:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$5710",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3788,
            "nodeType": "InheritanceSpecifier",
            "src": "415:13:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3789,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5759,
              "src": "430:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$5759",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3790,
            "nodeType": "InheritanceSpecifier",
            "src": "430:13:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3791,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5643,
              "src": "445:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$5643",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 3792,
            "nodeType": "InheritanceSpecifier",
            "src": "445:13:26"
          }
        ],
        "contractDependencies": [
          29,
          4734,
          4938,
          5195,
          5602,
          5643,
          5710,
          5759,
          5828,
          5891
        ],
        "contractKind": "contract",
        "documentation": "@notice Implementation of Akropolis Pool Token",
        "fullyImplemented": true,
        "id": 3819,
        "linearizedBaseContracts": [
          3819,
          5643,
          5759,
          4938,
          5602,
          5710,
          5828,
          29,
          5195,
          4734,
          5891
        ],
        "name": "PToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "507:151:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3797,
                        "name": "Base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "517:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Base_$29_$",
                          "typeString": "type(contract Base)"
                        }
                      },
                      "id": 3799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "517:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "517:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3801,
                  "nodeType": "ExpressionStatement",
                  "src": "517:17:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416b726f706f6c697320506f6f6c20546f6b656e",
                        "id": 3805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "569:22:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6db5913520051e7233481d4186f7a6c735797e58c9b9eea09c604c9519d71e47",
                          "typeString": "literal_string \"Akropolis Pool Token\""
                        },
                        "value": "Akropolis Pool Token"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50544b",
                        "id": 3806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "593:5:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47b066d5c31ee725e4b4364b04da4ad2b04713be36478fa679bc8cbbc0efba62",
                          "typeString": "literal_string \"PTK\""
                        },
                        "value": "PTK"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 3807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "600:2:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6db5913520051e7233481d4186f7a6c735797e58c9b9eea09c604c9519d71e47",
                          "typeString": "literal_string \"Akropolis Pool Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47b066d5c31ee725e4b4364b04da4ad2b04713be36478fa679bc8cbbc0efba62",
                          "typeString": "literal_string \"PTK\""
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3802,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5710,
                        "src": "544:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$5710_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 3804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5681,
                      "src": "544:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 3808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3809,
                  "nodeType": "ExpressionStatement",
                  "src": "544:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3813,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4722,
                          "src": "638:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "638:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3810,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5759,
                        "src": "613:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$5759_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 3812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5735,
                      "src": "613:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "613:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "613:38:26"
                }
              ]
            },
            "documentation": null,
            "id": 3818,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3795,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3794,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5872,
                  "src": "495:11:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "495:11:26"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:2:26"
            },
            "returnParameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:0:26"
            },
            "scope": 3819,
            "src": "466:192:26",
            "stateMutability": "nonpayable",
            "superFunction": 28,
            "visibility": "public"
          }
        ],
        "scope": 3820,
        "src": "390:271:26"
      }
    ],
    "src": "0:663:26"
  },
  "legacyAST": {
    "absolutePath": "/home/aleksrow/Documents/bch/akropolisOS/contracts/token/pTokens/PToken.sol",
    "exportedSymbols": {
      "PToken": [
        3819
      ]
    },
    "id": 3820,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3780,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 3781,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5711,
        "src": "26:90:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 3782,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5760,
        "src": "117:90:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 3783,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5644,
        "src": "208:90:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksrow/Documents/bch/akropolisOS/contracts/common/Base.sol",
        "file": "../../common/Base.sol",
        "id": 3784,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 30,
        "src": "299:31:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3785,
              "name": "Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 29,
              "src": "409:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Base_$29",
                "typeString": "contract Base"
              }
            },
            "id": 3786,
            "nodeType": "InheritanceSpecifier",
            "src": "409:4:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3787,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5710,
              "src": "415:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$5710",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3788,
            "nodeType": "InheritanceSpecifier",
            "src": "415:13:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3789,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5759,
              "src": "430:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$5759",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3790,
            "nodeType": "InheritanceSpecifier",
            "src": "430:13:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3791,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5643,
              "src": "445:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$5643",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 3792,
            "nodeType": "InheritanceSpecifier",
            "src": "445:13:26"
          }
        ],
        "contractDependencies": [
          29,
          4734,
          4938,
          5195,
          5602,
          5643,
          5710,
          5759,
          5828,
          5891
        ],
        "contractKind": "contract",
        "documentation": "@notice Implementation of Akropolis Pool Token",
        "fullyImplemented": true,
        "id": 3819,
        "linearizedBaseContracts": [
          3819,
          5643,
          5759,
          4938,
          5602,
          5710,
          5828,
          29,
          5195,
          4734,
          5891
        ],
        "name": "PToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "507:151:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3797,
                        "name": "Base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "517:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Base_$29_$",
                          "typeString": "type(contract Base)"
                        }
                      },
                      "id": 3799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "517:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "517:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3801,
                  "nodeType": "ExpressionStatement",
                  "src": "517:17:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416b726f706f6c697320506f6f6c20546f6b656e",
                        "id": 3805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "569:22:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6db5913520051e7233481d4186f7a6c735797e58c9b9eea09c604c9519d71e47",
                          "typeString": "literal_string \"Akropolis Pool Token\""
                        },
                        "value": "Akropolis Pool Token"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50544b",
                        "id": 3806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "593:5:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47b066d5c31ee725e4b4364b04da4ad2b04713be36478fa679bc8cbbc0efba62",
                          "typeString": "literal_string \"PTK\""
                        },
                        "value": "PTK"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 3807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "600:2:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6db5913520051e7233481d4186f7a6c735797e58c9b9eea09c604c9519d71e47",
                          "typeString": "literal_string \"Akropolis Pool Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47b066d5c31ee725e4b4364b04da4ad2b04713be36478fa679bc8cbbc0efba62",
                          "typeString": "literal_string \"PTK\""
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3802,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5710,
                        "src": "544:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$5710_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 3804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5681,
                      "src": "544:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 3808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3809,
                  "nodeType": "ExpressionStatement",
                  "src": "544:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3813,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4722,
                          "src": "638:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "638:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3810,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5759,
                        "src": "613:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$5759_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 3812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5735,
                      "src": "613:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "613:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "613:38:26"
                }
              ]
            },
            "documentation": null,
            "id": 3818,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3795,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3794,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5872,
                  "src": "495:11:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "495:11:26"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:2:26"
            },
            "returnParameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:0:26"
            },
            "scope": 3819,
            "src": "466:192:26",
            "stateMutability": "nonpayable",
            "superFunction": 28,
            "visibility": "public"
          }
        ],
        "scope": 3820,
        "src": "390:271:26"
      }
    ],
    "src": "0:663:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-01-21T09:57:34.620Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "burn(uint256)": {
        "details": "Destoys `amount` tokens from the caller.     * See `ERC20._burn`."
      },
      "burnFrom(address,uint256)": {
        "details": "See `ERC20._burnFrom`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "mint(address,uint256)": {
        "details": "See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "Implementation of Akropolis Pool Token"
  }
}