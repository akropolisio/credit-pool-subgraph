{
  "contractName": "CurveModule",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CURVE_A",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CURVE_B",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MODULE_CURVE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MODULE_FUNDS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MODULE_LIQUIDITY",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MODULE_LOAN",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "WITHDRAW_FEE_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidAssets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtCommitments",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateEnter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidAssets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateExit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidAssets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateExitInverse",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "withdraw",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawU",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawP",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curveA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curveB",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "s",
          "type": "uint256"
        }
      ],
      "name": "curveFunction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "module",
          "type": "string"
        }
      ],
      "name": "getModuleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "inverseCurveFunction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "setPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_curveA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_curveB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawFeePercent",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"CURVE_A\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CURVE_B\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODULE_CURVE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODULE_FUNDS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODULE_LIQUIDITY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODULE_LOAN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtCommitments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"calculateEnter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"calculateExit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pAmount\",\"type\":\"uint256\"}],\"name\":\"calculateExitInverse\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawU\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawP\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"}],\"name\":\"curveFunction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"module\",\"type\":\"string\"}],\"name\":\"getModuleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_curveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_curveB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawFeePercent\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"inverseCurveFunction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"calculateEnter(uint256,uint256,uint256)\":{\"params\":{\"debtCommitments\":\"Debt commitments\",\"lAmount\":\"Amount of liquidTokens to deposit\",\"liquidAssets\":\"Liquid assets in Pool\"},\"return\":\"Amount of pTokens to mint/unlock\"},\"calculateExit(uint256,uint256)\":{\"params\":{\"lAmount\":\"Amount of liquid tokens to withdraw (full: sum of withdrawU and withdrawP)\",\"liquidAssets\":\"Liquid assets in Pool\"},\"return\":\"Amount of pTokens to burn/lock\"},\"calculateExitInverse(uint256,uint256)\":{\"params\":{\"liquidAssets\":\"Liquid assets in Pool\",\"pAmount\":\"Amount of pTokens to withdraw\"},\"return\":\"Amount of liquid tokens to withdraw: total, for user, for pool\"},\"curveFunction(uint256)\":{\"params\":{\"s\":\"Point to calculate curve\"},\"return\":\"Value of curve at s\"},\"initialize(uint256,uint256,uint256)\":{\"params\":{\"_curveA\":\"Constabt A of a curve\",\"_curveB\":\"Constant B of a curve\",\"_withdrawFeePercent\":\"Withdraw fee, stored as a percent (multiplied by 100)\"}},\"inverseCurveFunction(uint256)\":{\"params\":{\"x\":\"Point to calculate curve\"},\"return\":\"Value of curve at s\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"calculateEnter(uint256,uint256,uint256)\":{\"notice\":\"Calculates amount of pTokens which should be minted/unlocked when liquidity added to pool dx = f(A + Deposit) - f(A) A - A is the volume of  total assets (liquid assets in Pool + debt commitments),  Deposit is the size of the deposit,  dx is the number of pTokens tokens received.\"},\"calculateExit(uint256,uint256)\":{\"notice\":\"Calculates amount of pTokens which should be burned/locked when liquidity removed from pool dx = f(L) - f(L - Whidraw) L is the volume of liquid assets\"},\"calculateExitInverse(uint256,uint256)\":{\"notice\":\"Calculates amount of liquid tokens one can withdraw from the pool when pTokens are burned/locked Withdraw = L-g(x-dx) x = f(L) dx - amount of pTokens taken from user WithdrawU = Withdraw*(1-d) WithdrawP = Withdraw*d Withdraw - amount of liquid token which should be sent to user\"},\"curveFunction(uint256)\":{\"notice\":\"Calculates value of Bonding Curve at a point s\"},\"initialize(uint256,uint256,uint256)\":{\"notice\":\"Initialize curve parameters\"},\"inverseCurveFunction(uint256)\":{\"notice\":\"Calculates inversed value of Bonding Curve at a point x\"}}}},\"settings\":{\"compilationTarget\":{\"../contracts/modules/curve/CurveModule.sol\":\"CurveModule\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"../contracts/common/Base.sol\":{\"keccak256\":\"0x4f2c5d205bda7d7b8f2a7ac8a32cdad7786ad617c97eefe0bf4472251bc20b2a\",\"urls\":[\"bzz-raw://b76f7049304f6576abd361d73452bb603921abc3a7edc4d3549ee3a3b5edd941\",\"dweb:/ipfs/QmUtQ3VKsE5Zd63xYM5mHUtXGdsdzUuoLtGfWmx7uBTuve\"]},\"../contracts/common/Module.sol\":{\"keccak256\":\"0xca3ab722e1ce5b38e6fd158d3078a982372e0087d6aa619e77821a81c5e3da89\",\"urls\":[\"bzz-raw://2b540228dda2888bab145bbbb2fb4b866b4b3c865db1c6919e82f2544f9f217a\",\"dweb:/ipfs/QmWm4ZuKr8g5Vt3HR2Qg7pJnKM29iGWL7ubhfCbQwtjzYA\"]},\"../contracts/core/ModuleNames.sol\":{\"keccak256\":\"0xb216ec3cd39f266502de39dfe498f25c1a7178d177f202457156d99e0c1e4afa\",\"urls\":[\"bzz-raw://42c772a1f0884a4599ad65552908de378036f1a8b5e67673106541677c905d6b\",\"dweb:/ipfs/QmTgpptRptE2HEPsYMXoSx3ekjNrioZEpybbqo4yt2FqYB\"]},\"../contracts/interfaces/curve/ICurveModule.sol\":{\"keccak256\":\"0x687bdab910ef8dbef76b428ec17d34f4cec928877e05d8fb8d6845bb44a2c270\",\"urls\":[\"bzz-raw://c37fd2e5ad2b92bf05726bd19e3c455943f1dd3755a9f5679b23e286c9cf33bf\",\"dweb:/ipfs/QmfJefP3mdyz7oekFwnXBEuF3ne3yYP2BfNnyoiYPPHabM\"]},\"../contracts/modules/curve/BondingCurve.sol\":{\"keccak256\":\"0xb342b6b769148ef7fe31b26dc1a0fca122899000d17e9f20460a60736160436c\",\"urls\":[\"bzz-raw://16584377fc7f2c7e157c8de4197438589e15dce13475dd646d5b852348538799\",\"dweb:/ipfs/QmcvLT7DyWSPX5jMzYnsLtsrzJuTauNQPGV2vLJuVKFDHg\"]},\"../contracts/modules/curve/CurveModule.sol\":{\"keccak256\":\"0xf7322e28ce7f6762e4aa75c3ac171efce6c68bbbb841bb9fa47f50ec61ce061e\",\"urls\":[\"bzz-raw://9f0e645667c688d4ef3be8876f205dec5d68a7e5268249ca1fa0c1e5d3de41fb\",\"dweb:/ipfs/QmTirPSTAok7zSLuSWmmPPqmMCFf7E8vy31EGzL3mnS8dg\"]},\"../contracts/token/pTokens/PToken.sol\":{\"keccak256\":\"0x3b3896b9a41d4416d31ed62c97c3db644692bfb5d1b1135d98e0059f2cfa1234\",\"urls\":[\"bzz-raw://adc486922da93b2adcc024e7a7f5aceb8fbde3b6e0682defb74774637a935304\",\"dweb:/ipfs/QmS1iYqz5VnUHgc4Bg1uJZbhfUoxAM62RckZ7iRwir7cdh\"]},\"../contracts/utils/ISQRT.sol\":{\"keccak256\":\"0xcb4e2cbe52572592f427b89a7ceb1f9f14f1a7ff3955e3f244149fe91d9d9acd\",\"urls\":[\"bzz-raw://c6d2b34c6dec27c52a33f7d8afe4842595f1c1b275458885b81ca2d7ea80ca65\",\"dweb:/ipfs/QmPs3wwZSwi2EJCrNefdCXecevtuYFSnSzAxe1oCc2bCJU\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzz-raw://c89dee1b8e96cb83f529b8b5c93be6b420c1913363a3fed01241942f08cc968f\",\"dweb:/ipfs/QmfWWwzg9hah3YwZRFWvAwq91HLjCHkKnxXqP6uLGURUou\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xec9f5e2dd33c13f1c1a63b22257724b61d2af536a2d22b2343144e1044b005fe\",\"urls\":[\"bzz-raw://ed49a07c7fa5f07a2e5fff28f07933bf56f8fd932be3c90e797e4d5c4689f94f\",\"dweb:/ipfs/QmdNEMKyATnnccVv8kip5eZFyuY77PU9SrBYVptioZC6pV\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa8d5fc6a480f6de5320c06f397e810198bf4a6c8b0b2405a4b28fb3909c3771e\",\"urls\":[\"bzz-raw://1c01ff2789027e0a9cbaaeabbc239d59906b40776e2936fcbdbc92dab7a4f912\",\"dweb:/ipfs/QmPYwzjB1GcQndyFqUNkpHNXs1CqxBqE3diVDWuWs5UaDb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x836e5248258c1eeef170a2b394d74cdec21adfbfca71a8feac303339182c4a39\",\"urls\":[\"bzz-raw://5a429cd7eac29f48bcbb6981f34ba43232e0fcb2bf9e752d2aaa2a64a27e07d5\",\"dweb:/ipfs/QmaFoHVPCY9Z5iZjZuwxq6pJ8cEqZdy7foLNNp46BzFNju\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xcae60acc572a549182cd7b26a169dbe5154ad0602cfb6c37533e9ee4ec1b4b06\",\"urls\":[\"bzz-raw://8d2bcd2a72821122b854e9467276090df516c50b34860d170164f4f080d1e579\",\"dweb:/ipfs/QmbxUTBMdADhXPAfzaPXFbAHEhYZyugdHwedNh43W1BUmt\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x6080604052611238806100136000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806371dc760f116100de5780638f32d59b11610097578063c4d66de811610071578063c4d66de814610434578063e6e2421314610221578063f2fde38b1461045a578063fa9c5d1b1461048057610173565b80638f32d59b146103cf578063a813d3a7146103eb578063b23a97d01461042c57610173565b806371dc760f146102cb5780637b6439421461037157806380d859111461038e5780638129fc1c146103b75780638230d02d146103bf5780638da5cb5b146103c757610173565b806346a225dd1161013057806346a225dd14610286578063495ef7051461028e57806356809616146102965780635af333891461029e5780636f5c1b3b146102a6578063715018a6146102c357610173565b8063077aa7051461017857806316f0115b146101f5578063368981a61461021957806341d36374146102215780634437152a1461023b5780634522751614610263575b600080fd5b6101806104a9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fd6104ca565b604080516001600160a01b039092168252519081900360200190f35b6101806104d9565b6102296104f9565b60408051918252519081900360200190f35b6102616004803603602081101561025157600080fd5b50356001600160a01b03166104fe565b005b6102296004803603604081101561027957600080fd5b5080359060200135610579565b6102296105be565b6102296105c3565b6102296105c9565b6102296105cf565b610229600480360360208110156102bc57600080fd5b50356105d5565b6102616105e6565b6101fd600480360360208110156102e157600080fd5b8101906020810181356401000000008111156102fc57600080fd5b82018360208201111561030e57600080fd5b8035906020019184600183028401116401000000008311171561033057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610689945050505050565b6102296004803603602081101561038757600080fd5b5035610894565b610261600480360360608110156103a457600080fd5b50803590602081013590604001356108a5565b610261610959565b610180610a0b565b6101fd610a30565b6103d7610a3f565b604080519115158252519081900360200190f35b61040e6004803603604081101561040157600080fd5b5080359060200135610a65565b60408051938452602084019290925282820152519081900360600190f35b610180610b12565b6102616004803603602081101561044a57600080fd5b50356001600160a01b0316610b33565b6102616004803603602081101561047057600080fd5b50356001600160a01b0316610bec565b6102296004803603606081101561049657600080fd5b5080359060208101359060400135610c4e565b6040518060400160405280600581526020016466756e647360d81b81525081565b6066546001600160a01b031681565b604051806040016040528060048152602001633637b0b760e11b81525081565b600181565b610506610a3f565b610557576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b600080610585846105d5565b905060006105a161059c868663ffffffff610c9716565b6105d5565b90506105b3828263ffffffff610c9716565b925050505b92915050565b600581565b60695481565b60675481565b60685481565b60006105b860675460685484610cf4565b6105ee610a3f565b61063f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6066546000906001600160a01b03166106db576040805162461bcd60e51b815260206004820152600f60248201526e135bd91d5b194e881b9bc81c1bdbdb608a1b604482015290519081900360640190fd5b6066546040516020602482018181528551604484015285516000946060946001600160a01b03909116938893928392606401918501908083838b5b8381101561072e578181015183820152602001610716565b50505050905090810190601f16801561075b5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b031663349f642f60e11b178152905182519295509350839250908083835b602083106107b65780518252601f199092019160209182019101610797565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610816576040519150601f19603f3d011682016040523d82523d6000602084013e61081b565b606091505b50915091508161082c578060208201fd5b600081806020019051602081101561084357600080fd5b505190506001600160a01b03811661088c5760405162461bcd60e51b81526004018080602001828103825260228152602001806111e26022913960400191505060405180910390fd5b949350505050565b60006105b860675460685484610d7f565b600054610100900460ff16806108be57506108be610dcb565b806108cc575060005460ff16155b6109075760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff16158015610932576000805460ff1961ff0019909116610100171660011790555b6067849055606883905560698290558015610953576000805461ff00191690555b50505050565b600054610100900460ff16806109725750610972610dcb565b80610980575060005460ff16155b6109bb5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff161580156109e6576000805460ff1961ff0019909116610100171660011790555b6109f66109f1610dd1565b610dd5565b8015610a08576000805461ff00191690555b50565b604051806040016040528060098152602001686c697175696469747960b81b81525081565b6033546001600160a01b031690565b6033546000906001600160a01b0316610a56610dd1565b6001600160a01b031614905090565b600080600080610a74866105d5565b90506000610a88828763ffffffff610c9716565b90506000610a9582610894565b905080881015610aa157fe5b610ab1888263ffffffff610c9716565b9550610aea6064610ade610ad16069546064610c9790919063ffffffff16565b899063ffffffff610ec616565b9063ffffffff610f2616565b9450610b066064610ade60695489610ec690919063ffffffff16565b93505050509250925092565b60405180604001604052806005815260200164637572766560d81b81525081565b600054610100900460ff1680610b4c5750610b4c610dcb565b80610b5a575060005460ff16155b610b955760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff16158015610bc0576000805460ff1961ff0019909116610100171660011790555b610bc982610f90565b610bd660018060056108a5565b8015610be8576000805461ff00191690555b5050565b610bf4610a3f565b610c45576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610a088161102e565b600080610c61858563ffffffff6110cf16565b9050610c8e610c6f826105d5565b610c8261059c848763ffffffff6110cf16565b9063ffffffff610c9716565b95945050505050565b600082821115610cee576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600080610d54610d2584610d198781670de0b6b3a7640000600463ffffffff610ec616565b9063ffffffff610ec616565b610d4887610d196ec097ce7bc90715b34b9f10000000008263ffffffff610ec616565b9063ffffffff6110cf16565b9050610c8e6002610ade610d76670de0b6b3a76400008963ffffffff610ec616565b610c8285611129565b600061088c610d9c670de0b6b3a76400008563ffffffff610ec616565b610ade610dbb85610d19670de0b6b3a76400008a63ffffffff610ec616565b610d48868063ffffffff610ec616565b303b1590565b3390565b600054610100900460ff1680610dee5750610dee610dcb565b80610dfc575060005460ff16155b610e375760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff16158015610e62576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610be8576000805461ff00191690555050565b600082610ed5575060006105b8565b82820282848281610ee257fe5b0414610f1f5760405162461bcd60e51b81526004018080602001828103825260218152602001806111936021913960400191505060405180910390fd5b9392505050565b6000808211610f7c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610f8757fe5b04949350505050565b600054610100900460ff1680610fa95750610fa9610dcb565b80610fb7575060005460ff16155b610ff25760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff1615801561101d576000805460ff1961ff0019909116610100171660011790555b611025610959565b610bd6826104fe565b6001600160a01b0381166110735760405162461bcd60e51b815260040180806020018281038252602681526020018061116d6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610f1f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006105b8826000600019821061113c57fe5b60026001830104825b80821015610f1f57508060028180868161115b57fe5b04018161116457fe5b04915061114556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644d6f64756c653a20726571756573746564206d6f64756c65206e6f7420666f756e64a265627a7a72315820a3f3a4d2df6db3e26bcbfbcf9bde4c07553af528c0c05d29a24d1d297376675664736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806371dc760f116100de5780638f32d59b11610097578063c4d66de811610071578063c4d66de814610434578063e6e2421314610221578063f2fde38b1461045a578063fa9c5d1b1461048057610173565b80638f32d59b146103cf578063a813d3a7146103eb578063b23a97d01461042c57610173565b806371dc760f146102cb5780637b6439421461037157806380d859111461038e5780638129fc1c146103b75780638230d02d146103bf5780638da5cb5b146103c757610173565b806346a225dd1161013057806346a225dd14610286578063495ef7051461028e57806356809616146102965780635af333891461029e5780636f5c1b3b146102a6578063715018a6146102c357610173565b8063077aa7051461017857806316f0115b146101f5578063368981a61461021957806341d36374146102215780634437152a1461023b5780634522751614610263575b600080fd5b6101806104a9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fd6104ca565b604080516001600160a01b039092168252519081900360200190f35b6101806104d9565b6102296104f9565b60408051918252519081900360200190f35b6102616004803603602081101561025157600080fd5b50356001600160a01b03166104fe565b005b6102296004803603604081101561027957600080fd5b5080359060200135610579565b6102296105be565b6102296105c3565b6102296105c9565b6102296105cf565b610229600480360360208110156102bc57600080fd5b50356105d5565b6102616105e6565b6101fd600480360360208110156102e157600080fd5b8101906020810181356401000000008111156102fc57600080fd5b82018360208201111561030e57600080fd5b8035906020019184600183028401116401000000008311171561033057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610689945050505050565b6102296004803603602081101561038757600080fd5b5035610894565b610261600480360360608110156103a457600080fd5b50803590602081013590604001356108a5565b610261610959565b610180610a0b565b6101fd610a30565b6103d7610a3f565b604080519115158252519081900360200190f35b61040e6004803603604081101561040157600080fd5b5080359060200135610a65565b60408051938452602084019290925282820152519081900360600190f35b610180610b12565b6102616004803603602081101561044a57600080fd5b50356001600160a01b0316610b33565b6102616004803603602081101561047057600080fd5b50356001600160a01b0316610bec565b6102296004803603606081101561049657600080fd5b5080359060208101359060400135610c4e565b6040518060400160405280600581526020016466756e647360d81b81525081565b6066546001600160a01b031681565b604051806040016040528060048152602001633637b0b760e11b81525081565b600181565b610506610a3f565b610557576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b600080610585846105d5565b905060006105a161059c868663ffffffff610c9716565b6105d5565b90506105b3828263ffffffff610c9716565b925050505b92915050565b600581565b60695481565b60675481565b60685481565b60006105b860675460685484610cf4565b6105ee610a3f565b61063f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6066546000906001600160a01b03166106db576040805162461bcd60e51b815260206004820152600f60248201526e135bd91d5b194e881b9bc81c1bdbdb608a1b604482015290519081900360640190fd5b6066546040516020602482018181528551604484015285516000946060946001600160a01b03909116938893928392606401918501908083838b5b8381101561072e578181015183820152602001610716565b50505050905090810190601f16801561075b5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b031663349f642f60e11b178152905182519295509350839250908083835b602083106107b65780518252601f199092019160209182019101610797565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610816576040519150601f19603f3d011682016040523d82523d6000602084013e61081b565b606091505b50915091508161082c578060208201fd5b600081806020019051602081101561084357600080fd5b505190506001600160a01b03811661088c5760405162461bcd60e51b81526004018080602001828103825260228152602001806111e26022913960400191505060405180910390fd5b949350505050565b60006105b860675460685484610d7f565b600054610100900460ff16806108be57506108be610dcb565b806108cc575060005460ff16155b6109075760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff16158015610932576000805460ff1961ff0019909116610100171660011790555b6067849055606883905560698290558015610953576000805461ff00191690555b50505050565b600054610100900460ff16806109725750610972610dcb565b80610980575060005460ff16155b6109bb5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff161580156109e6576000805460ff1961ff0019909116610100171660011790555b6109f66109f1610dd1565b610dd5565b8015610a08576000805461ff00191690555b50565b604051806040016040528060098152602001686c697175696469747960b81b81525081565b6033546001600160a01b031690565b6033546000906001600160a01b0316610a56610dd1565b6001600160a01b031614905090565b600080600080610a74866105d5565b90506000610a88828763ffffffff610c9716565b90506000610a9582610894565b905080881015610aa157fe5b610ab1888263ffffffff610c9716565b9550610aea6064610ade610ad16069546064610c9790919063ffffffff16565b899063ffffffff610ec616565b9063ffffffff610f2616565b9450610b066064610ade60695489610ec690919063ffffffff16565b93505050509250925092565b60405180604001604052806005815260200164637572766560d81b81525081565b600054610100900460ff1680610b4c5750610b4c610dcb565b80610b5a575060005460ff16155b610b955760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff16158015610bc0576000805460ff1961ff0019909116610100171660011790555b610bc982610f90565b610bd660018060056108a5565b8015610be8576000805461ff00191690555b5050565b610bf4610a3f565b610c45576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610a088161102e565b600080610c61858563ffffffff6110cf16565b9050610c8e610c6f826105d5565b610c8261059c848763ffffffff6110cf16565b9063ffffffff610c9716565b95945050505050565b600082821115610cee576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600080610d54610d2584610d198781670de0b6b3a7640000600463ffffffff610ec616565b9063ffffffff610ec616565b610d4887610d196ec097ce7bc90715b34b9f10000000008263ffffffff610ec616565b9063ffffffff6110cf16565b9050610c8e6002610ade610d76670de0b6b3a76400008963ffffffff610ec616565b610c8285611129565b600061088c610d9c670de0b6b3a76400008563ffffffff610ec616565b610ade610dbb85610d19670de0b6b3a76400008a63ffffffff610ec616565b610d48868063ffffffff610ec616565b303b1590565b3390565b600054610100900460ff1680610dee5750610dee610dcb565b80610dfc575060005460ff16155b610e375760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff16158015610e62576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610be8576000805461ff00191690555050565b600082610ed5575060006105b8565b82820282848281610ee257fe5b0414610f1f5760405162461bcd60e51b81526004018080602001828103825260218152602001806111936021913960400191505060405180910390fd5b9392505050565b6000808211610f7c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610f8757fe5b04949350505050565b600054610100900460ff1680610fa95750610fa9610dcb565b80610fb7575060005460ff16155b610ff25760405162461bcd60e51b815260040180806020018281038252602e8152602001806111b4602e913960400191505060405180910390fd5b600054610100900460ff1615801561101d576000805460ff1961ff0019909116610100171660011790555b611025610959565b610bd6826104fe565b6001600160a01b0381166110735760405162461bcd60e51b815260040180806020018281038252602681526020018061116d6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610f1f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006105b8826000600019821061113c57fe5b60026001830104825b80821015610f1f57508060028180868161115b57fe5b04018161116457fe5b04915061114556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644d6f64756c653a20726571756573746564206d6f64756c65206e6f7420666f756e64a265627a7a72315820a3f3a4d2df6db3e26bcbfbcf9bde4c07553af528c0c05d29a24d1d297376675664736f6c634300050c0032",
  "sourceMap": "182:373:17:-;;;;;;;;;",
  "deployedSourceMap": "182:373:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:373:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;141:45:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;141:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;166:19:4;;;:::i;:::-;;;;-1:-1:-1;;;;;166:19:4;;;;;;;;;;;;;;251:43:5;;;:::i;247:35:17:-;;;:::i;:::-;;;;;;;;;;;;;;;;310:86:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;310:86:4;-1:-1:-1;;;;;310:86:4;;:::i;:::-;;2483:263:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2483:263:16;;;;;;;:::i;329:48:17:-;;;:::i;730:33:16:-;;;:::i;676:21::-;;;:::i;703:::-;;;:::i;4168:110::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4168:110:16;;:::i;1746:137:37:-;;;:::i;402:571:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;402:571:4;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;402:571:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;402:571:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;402:571:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;402:571:4;;-1:-1:-1;402:571:4;;-1:-1:-1;;;;;402:571:4:i;4447:124:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4447:124:16;;:::i;1005:211::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1005:211:16;;;;;;;;;;;;:::i;394:90:3:-;;;:::i;192:53:5:-;;;:::i;959:77:37:-;;;:::i;1310:92::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;3283:725:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3283:725:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;90:45:5;;;:::i;384:168:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;384:168:17;-1:-1:-1;;;;;384:168:17;;:::i;2032:107:37:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:37;-1:-1:-1;;;;;2032:107:37;;:::i;1762:326:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1762:326:16;;;;;;;;;;;;:::i;141:45:5:-;;;;;;;;;;;;;;-1:-1:-1;;;141:45:5;;;;:::o;166:19:4:-;;;-1:-1:-1;;;;;166:19:4;;:::o;251:43:5:-;;;;;;;;;;;;;;-1:-1:-1;;;251:43:5;;;;:::o;247:35:17:-;281:1;247:35;:::o;310:86:4:-;1163:9:37;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:4:4;:12;;-1:-1:-1;;;;;;369:12:4;-1:-1:-1;;;;;369:12:4;;;;;;;;;;310:86::o;2483:263:16:-;2588:7;2607:10;2620:27;2634:12;2620:13;:27::i;:::-;2607:40;-1:-1:-1;2657:11:16;2671:40;2685:25;:12;2702:7;2685:25;:16;:25;:::i;:::-;2671:13;:40::i;:::-;2657:54;-1:-1:-1;2728:11:16;:2;2657:54;2728:11;:6;:11;:::i;:::-;2721:18;;;;2483:263;;;;;:::o;329:48:17:-;376:1;329:48;:::o;730:33:16:-;;;;:::o;676:21::-;;;;:::o;703:::-;;;;:::o;4168:110::-;4222:7;4247:24;4253:6;;4261;;4269:1;4247:5;:24::i;1746:137:37:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:37;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:37;;;1746:137::o;402:571:4:-;496:4;;470:7;;-1:-1:-1;;;;;496:4:4;488:48;;;;;-1:-1:-1;;;488:48:4;;;;;;;;;;;;-1:-1:-1;;;488:48:4;;;;;;;;;;;;;;;584:4;;600:46;;;;;;;;;;;;;;;;;547:12;;561:19;;-1:-1:-1;;;;;584:4:4;;;;639:6;;600:46;;;;;;;;;;;;547:12;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;600:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:46:4;;;-1:-1:-1;;26:21;;;22:32;6:49;;600:46:4;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;584:63:4;;;;600:46;;-1:-1:-1;584:63:4;-1:-1:-1;584:63:4;;-1:-1:-1;25:18;584:63:4;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;584:63:4;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;546:101:4;;;;714:7;709:78;;770:6;765:2;757:6;753:15;746:31;732:55;797:21;832:6;821:29;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;821:29:4;;-1:-1:-1;;;;;;868:29:4;;860:76;;;;-1:-1:-1;;;860:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:13;402:571;-1:-1:-1;;;;402:571:4:o;4447:124:16:-;4508:7;4533:31;4546:6;;4554;;4562:1;4533:12;:31::i;1005:211::-;1024:12:43;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:43;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:43;;;;;1225:18;1213:4;1225:18;;;1170:80;1117:6:16;:16;;;1143:6;:16;;;1169:18;:40;;;1264:55:43;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:43;;;1264:55;1005:211:16;;;;:::o;394:90:3:-;1024:12:43;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:43;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:43;;;;;1225:18;1213:4;1225:18;;;1170:80;445:32:3;464:12;:10;:12::i;:::-;445:18;:32::i;:::-;1268:14:43;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:43;;;1264:55;394:90:3;:::o;192:53:5:-;;;;;;;;;;;;;;-1:-1:-1;;;192:53:5;;;;:::o;959:77:37:-;1023:6;;-1:-1:-1;;;;;1023:6:37;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:37;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:37;;1366:29;;1310:92;:::o;3283:725:16:-;3395:16;3413:17;3432;3461:9;3473:27;3487:12;3473:13;:27::i;:::-;3461:39;-1:-1:-1;3510:13:16;3526:14;3461:39;3532:7;3526:14;:5;:14;:::i;:::-;3510:30;;3550:13;3566:27;3587:5;3566:20;:27::i;:::-;3550:43;;3626:5;3610:12;:21;;3603:29;;;;3653:23;:12;3670:5;3653:23;:16;:23;:::i;:::-;3642:34;;3852:74;350:3;3852:53;3865:39;3885:18;;350:3;3865:19;;:39;;;;:::i;:::-;3852:8;;:53;:12;:53;:::i;:::-;:57;:74;:57;:74;:::i;:::-;3840:86;;3948:53;350:3;3948:32;3961:18;;3948:8;:12;;:32;;;;:::i;:53::-;3936:65;;3283:725;;;;;;;;:::o;90:45:5:-;;;;;;;;;;;;;;-1:-1:-1;;;90:45:5;;;;:::o;384:168:17:-;1024:12:43;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:43;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:43;;;;;1225:18;1213:4;1225:18;;;1170:80;448:24:17;466:5;448:17;:24::i;:::-;482:63;281:1;322;376;482:23;:63::i;:::-;1268:14:43;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:43;;;1264:55;384:168:17;;:::o;2032:107:37:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;1762:326:16:-;1901:7;;1948:33;:12;1965:15;1948:33;:16;:33;:::i;:::-;1920:61;;1998:83;2048:32;2062:17;2048:13;:32::i;:::-;1998:45;2012:30;:17;2034:7;2012:30;:21;:30;:::i;1998:45::-;:49;:83;:49;:83;:::i;:::-;1991:90;1762:326;-1:-1:-1;;;;;1762:326:16:o;1274:179:36:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:36;;;1274:179::o;4971:295:16:-;5040:7;;5163:48;5186:24;5208:1;5186:17;5201:1;5186:17;618:6;5194:1;5186:10;:7;:10;:::i;:::-;:14;:17;:14;:17;:::i;:24::-;5163:18;5179:1;5163:11;663:6;5179:1;5163:11;:8;:11;:::i;:18::-;:22;:48;:22;:48;:::i;:::-;5151:60;-1:-1:-1;5228:31:16;5257:1;5228:24;5241:10;618:6;5249:1;5241:10;:7;:10;:::i;:::-;5228:8;:1;:6;:8::i;5353:195::-;5429:7;5494:47;5530:10;618:6;5538:1;5530:10;:7;:10;:::i;:::-;5494:31;5507:17;5522:1;5507:10;618:6;5515:1;5507:10;:7;:10;:::i;:17::-;5494:8;5500:1;;5494:8;:5;:8;:::i;1409:467:43:-;1842:7;1830:20;1864:7;1409:467;:::o;791:88:33:-;862:10;791:88;:::o;741:142:37:-;1024:12:43;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:43;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:43;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:37;:15;;-1:-1:-1;;;;;;806:15:37;-1:-1:-1;;;;;806:15:37;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:37;;-1:-1:-1;;836:40:37;1268:14:43;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:43;;;741:142:37;;:::o;1693:458:36:-;1751:7;1991:6;1987:45;;-1:-1:-1;2020:1:36;2013:8;;1987:45;2054:5;;;2058:1;2054;:5;:1;2077:5;;;;;:10;2069:56;;;;-1:-1:-1;;;2069:56:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;1693:458;-1:-1:-1;;;1693:458:36:o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;-1:-1:-1;;;2749:44:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;;2606:326;-1:-1:-1;;;;2606:326:36:o;192:112:4:-;1024:12:43;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:43;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:43;;;;;1225:18;1213:4;1225:18;;;1170:80;256:17:4;:15;:17::i;:::-;283:14;291:5;283:7;:14::i;2240:225:37:-;-1:-1:-1;;;;;2313:22:37;;2305:73;;;;-1:-1:-1;;;2305:73:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:37;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:37;-1:-1:-1;;;;;2441:17:37;;;;;;;;;;2240:225::o;834:176:36:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:36;;;;;;;;;;;;;;;;;;;;;;;;;;;281:96:32;328:7;353:17;368:1;1268:7;-1:-1:-1;;1294:1:32;:70;1287:78;;;;1438:1;1433;1429:5;;1428:11;1429:5;1472:150;1483:1;1479;:5;1472:150;;;-1:-1:-1;1504:1:32;1537;1504;;1524;1504;1524:5;;;;;:9;1523:15;;;;;;1519:19;;1472:150;",
  "source": "pragma solidity ^0.5.12;\n\nimport \"../../common/Module.sol\";\nimport \"../../token/pTokens/PToken.sol\";\nimport \"../../interfaces/curve/ICurveModule.sol\";\nimport \"./BondingCurve.sol\";\n\n\ncontract CurveModule is Module, ICurveModule, BondingCurve {\n    uint256 public constant CURVE_A = 1;\n    uint256 public constant CURVE_B = 1;\n    uint256 public constant WITHDRAW_FEE_PERCENT = 5;\n\n    function initialize(address _pool) public initializer {\n        Module.initialize(_pool);\n        BondingCurve.initialize(CURVE_A, CURVE_B, WITHDRAW_FEE_PERCENT);\n    }\n\n}",
  "sourcePath": "../contracts/modules/curve/CurveModule.sol",
  "ast": {
    "absolutePath": "../contracts/modules/curve/CurveModule.sol",
    "exportedSymbols": {
      "CurveModule": [
        1446
      ]
    },
    "id": 1447,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1404,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "../contracts/common/Module.sol",
        "file": "../../common/Module.sol",
        "id": 1405,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 368,
        "src": "26:33:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../contracts/token/pTokens/PToken.sol",
        "file": "../../token/pTokens/PToken.sol",
        "id": 1406,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 4010,
        "src": "60:40:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../contracts/interfaces/curve/ICurveModule.sol",
        "file": "../../interfaces/curve/ICurveModule.sol",
        "id": 1407,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 838,
        "src": "101:49:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../contracts/modules/curve/BondingCurve.sol",
        "file": "./BondingCurve.sol",
        "id": 1408,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 1403,
        "src": "151:28:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1409,
              "name": "Module",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 367,
              "src": "206:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Module_$367",
                "typeString": "contract Module"
              }
            },
            "id": 1410,
            "nodeType": "InheritanceSpecifier",
            "src": "206:6:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1411,
              "name": "ICurveModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 837,
              "src": "214:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICurveModule_$837",
                "typeString": "contract ICurveModule"
              }
            },
            "id": 1412,
            "nodeType": "InheritanceSpecifier",
            "src": "214:12:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1413,
              "name": "BondingCurve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1402,
              "src": "228:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondingCurve_$1402",
                "typeString": "contract BondingCurve"
              }
            },
            "id": 1414,
            "nodeType": "InheritanceSpecifier",
            "src": "228:12:17"
          }
        ],
        "contractDependencies": [
          277,
          367,
          382,
          837,
          1402,
          4924,
          5385,
          6081
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1446,
        "linearizedBaseContracts": [
          1446,
          1402,
          837,
          367,
          382,
          277,
          5385,
          4924,
          6081
        ],
        "name": "CurveModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1417,
            "name": "CURVE_A",
            "nodeType": "VariableDeclaration",
            "scope": 1446,
            "src": "247:35:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1415,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "281:1:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1420,
            "name": "CURVE_B",
            "nodeType": "VariableDeclaration",
            "scope": 1446,
            "src": "288:35:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1418,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1419,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "322:1:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1423,
            "name": "WITHDRAW_FEE_PERCENT",
            "nodeType": "VariableDeclaration",
            "scope": 1446,
            "src": "329:48:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1421,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "329:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 1422,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "376:1:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "438:114:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "466:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1430,
                        "name": "Module",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "448:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Module_$367_$",
                          "typeString": "type(contract Module)"
                        }
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "448:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "448:24:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1439,
                        "name": "CURVE_A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "506:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1440,
                        "name": "CURVE_B",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1420,
                        "src": "515:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1441,
                        "name": "WITHDRAW_FEE_PERCENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "524:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1436,
                        "name": "BondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "482:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BondingCurve_$1402_$",
                          "typeString": "type(contract BondingCurve)"
                        }
                      },
                      "id": 1438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1164,
                      "src": "482:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "482:63:17"
                }
              ]
            },
            "documentation": null,
            "id": 1445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1428,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1427,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6062,
                  "src": "426:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "426:11:17"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "name": "_pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "404:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:15:17"
            },
            "returnParameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:17"
            },
            "scope": 1446,
            "src": "384:168:17",
            "stateMutability": "nonpayable",
            "superFunction": 304,
            "visibility": "public"
          }
        ],
        "scope": 1447,
        "src": "182:373:17"
      }
    ],
    "src": "0:555:17"
  },
  "legacyAST": {
    "absolutePath": "../contracts/modules/curve/CurveModule.sol",
    "exportedSymbols": {
      "CurveModule": [
        1446
      ]
    },
    "id": 1447,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1404,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "../contracts/common/Module.sol",
        "file": "../../common/Module.sol",
        "id": 1405,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 368,
        "src": "26:33:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../contracts/token/pTokens/PToken.sol",
        "file": "../../token/pTokens/PToken.sol",
        "id": 1406,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 4010,
        "src": "60:40:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../contracts/interfaces/curve/ICurveModule.sol",
        "file": "../../interfaces/curve/ICurveModule.sol",
        "id": 1407,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 838,
        "src": "101:49:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../contracts/modules/curve/BondingCurve.sol",
        "file": "./BondingCurve.sol",
        "id": 1408,
        "nodeType": "ImportDirective",
        "scope": 1447,
        "sourceUnit": 1403,
        "src": "151:28:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1409,
              "name": "Module",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 367,
              "src": "206:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Module_$367",
                "typeString": "contract Module"
              }
            },
            "id": 1410,
            "nodeType": "InheritanceSpecifier",
            "src": "206:6:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1411,
              "name": "ICurveModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 837,
              "src": "214:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICurveModule_$837",
                "typeString": "contract ICurveModule"
              }
            },
            "id": 1412,
            "nodeType": "InheritanceSpecifier",
            "src": "214:12:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1413,
              "name": "BondingCurve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1402,
              "src": "228:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondingCurve_$1402",
                "typeString": "contract BondingCurve"
              }
            },
            "id": 1414,
            "nodeType": "InheritanceSpecifier",
            "src": "228:12:17"
          }
        ],
        "contractDependencies": [
          277,
          367,
          382,
          837,
          1402,
          4924,
          5385,
          6081
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1446,
        "linearizedBaseContracts": [
          1446,
          1402,
          837,
          367,
          382,
          277,
          5385,
          4924,
          6081
        ],
        "name": "CurveModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1417,
            "name": "CURVE_A",
            "nodeType": "VariableDeclaration",
            "scope": 1446,
            "src": "247:35:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1415,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "281:1:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1420,
            "name": "CURVE_B",
            "nodeType": "VariableDeclaration",
            "scope": 1446,
            "src": "288:35:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1418,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1419,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "322:1:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1423,
            "name": "WITHDRAW_FEE_PERCENT",
            "nodeType": "VariableDeclaration",
            "scope": 1446,
            "src": "329:48:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1421,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "329:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 1422,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "376:1:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "438:114:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "466:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1430,
                        "name": "Module",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "448:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Module_$367_$",
                          "typeString": "type(contract Module)"
                        }
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "448:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "448:24:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1439,
                        "name": "CURVE_A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "506:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1440,
                        "name": "CURVE_B",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1420,
                        "src": "515:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1441,
                        "name": "WITHDRAW_FEE_PERCENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "524:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1436,
                        "name": "BondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "482:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BondingCurve_$1402_$",
                          "typeString": "type(contract BondingCurve)"
                        }
                      },
                      "id": 1438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1164,
                      "src": "482:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "482:63:17"
                }
              ]
            },
            "documentation": null,
            "id": 1445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1428,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1427,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6062,
                  "src": "426:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "426:11:17"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "name": "_pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "404:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:15:17"
            },
            "returnParameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:17"
            },
            "scope": 1446,
            "src": "384:168:17",
            "stateMutability": "nonpayable",
            "superFunction": 304,
            "visibility": "public"
          }
        ],
        "scope": 1447,
        "src": "182:373:17"
      }
    ],
    "src": "0:555:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-01-10T11:12:15.789Z",
  "devdoc": {
    "methods": {
      "calculateEnter(uint256,uint256,uint256)": {
        "params": {
          "debtCommitments": "Debt commitments",
          "lAmount": "Amount of liquidTokens to deposit",
          "liquidAssets": "Liquid assets in Pool"
        },
        "return": "Amount of pTokens to mint/unlock"
      },
      "calculateExit(uint256,uint256)": {
        "params": {
          "lAmount": "Amount of liquid tokens to withdraw (full: sum of withdrawU and withdrawP)",
          "liquidAssets": "Liquid assets in Pool"
        },
        "return": "Amount of pTokens to burn/lock"
      },
      "calculateExitInverse(uint256,uint256)": {
        "params": {
          "liquidAssets": "Liquid assets in Pool",
          "pAmount": "Amount of pTokens to withdraw"
        },
        "return": "Amount of liquid tokens to withdraw: total, for user, for pool"
      },
      "curveFunction(uint256)": {
        "params": {
          "s": "Point to calculate curve"
        },
        "return": "Value of curve at s"
      },
      "initialize(uint256,uint256,uint256)": {
        "params": {
          "_curveA": "Constabt A of a curve",
          "_curveB": "Constant B of a curve",
          "_withdrawFeePercent": "Withdraw fee, stored as a percent (multiplied by 100)"
        }
      },
      "inverseCurveFunction(uint256)": {
        "params": {
          "x": "Point to calculate curve"
        },
        "return": "Value of curve at s"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "calculateEnter(uint256,uint256,uint256)": {
        "notice": "Calculates amount of pTokens which should be minted/unlocked when liquidity added to pool dx = f(A + Deposit) - f(A) A - A is the volume of  total assets (liquid assets in Pool + debt commitments),  Deposit is the size of the deposit,  dx is the number of pTokens tokens received."
      },
      "calculateExit(uint256,uint256)": {
        "notice": "Calculates amount of pTokens which should be burned/locked when liquidity removed from pool dx = f(L) - f(L - Whidraw) L is the volume of liquid assets"
      },
      "calculateExitInverse(uint256,uint256)": {
        "notice": "Calculates amount of liquid tokens one can withdraw from the pool when pTokens are burned/locked Withdraw = L-g(x-dx) x = f(L) dx - amount of pTokens taken from user WithdrawU = Withdraw*(1-d) WithdrawP = Withdraw*d Withdraw - amount of liquid token which should be sent to user"
      },
      "curveFunction(uint256)": {
        "notice": "Calculates value of Bonding Curve at a point s"
      },
      "initialize(uint256,uint256,uint256)": {
        "notice": "Initialize curve parameters"
      },
      "inverseCurveFunction(uint256)": {
        "notice": "Calculates inversed value of Bonding Curve at a point x"
      }
    }
  }
}